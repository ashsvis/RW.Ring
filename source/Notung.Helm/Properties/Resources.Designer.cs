//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Notung.Helm.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Notung.Helm.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Calling function {0} from {1}.
        /// </summary>
        internal static string CALLING_FUNCTION {
            get {
                return ResourceManager.GetString("CALLING_FUNCTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Contract type must be an interface type.
        /// </summary>
        internal static string CONTRACT_NOT_INTERFACE {
            get {
                return ResourceManager.GetString("CONTRACT_NOT_INTERFACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This method cannot be called in recieving process.
        /// </summary>
        internal static string COPY_DATA_SEND_RECIEVE {
            get {
                return ResourceManager.GetString("COPY_DATA_SEND_RECIEVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap DefaultSplash {
            get {
                object obj = ResourceManager.GetObject("DefaultSplash", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Library failed to load. Unable to enumerate functions.
        /// </summary>
        internal static string DLL_FUNCTIONS_ENUM_FAIL {
            get {
                return ResourceManager.GetString("DLL_FUNCTIONS_ENUM_FAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No function in dll selected.
        /// </summary>
        internal static string DLL_NO_FUNCTION {
            get {
                return ResourceManager.GetString("DLL_NO_FUNCTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Error {
            get {
                object obj = ResourceManager.GetObject("Error", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Call stack.
        /// </summary>
        internal static string EXCEPTION_CALLSTACK {
            get {
                return ResourceManager.GetString("EXCEPTION_CALLSTACK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Message.
        /// </summary>
        internal static string EXCEPTION_MESSAGE {
            get {
                return ResourceManager.GetString("EXCEPTION_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Source.
        /// </summary>
        internal static string EXCEPTION_SOURCE {
            get {
                return ResourceManager.GetString("EXCEPTION_SOURCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Type.
        /// </summary>
        internal static string EXCEPTION_TYPE {
            get {
                return ResourceManager.GetString("EXCEPTION_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to init Application instance. Would You like to check settings?.
        /// </summary>
        internal static string INIT_FAIL_DESCRIPTION {
            get {
                return ResourceManager.GetString("INIT_FAIL_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Inspector {
            get {
                object obj = ResourceManager.GetObject("Inspector", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Message code {0} cannot be used to get command line arguments. Use {1}.StringArgsMessageCode or WM_COPYDATA..
        /// </summary>
        internal static string NO_LINK_MESSAGE_CODE {
            get {
                return ResourceManager.GetString("NO_LINK_MESSAGE_CODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ready.
        /// </summary>
        internal static string READY {
            get {
                return ResourceManager.GetString("READY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Validating section {0}.
        /// </summary>
        internal static string VALIDATING_SECTION {
            get {
                return ResourceManager.GetString("VALIDATING_SECTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Validating sections.
        /// </summary>
        internal static string VALIDATING_SECTIONS {
            get {
                return ResourceManager.GetString("VALIDATING_SECTIONS", resourceCulture);
            }
        }
    }
}
